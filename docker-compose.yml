version: '3'
services:

  monitor_1:
    container_name: monitor_1
    image: monitor:latest
    entrypoint: python3 /main.py
    restart: on-failure
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock
      - ./storage:/states
    environment:
      - INTERNAL_PORT=3003
      - TIMEOUT=10
      - ID=monitor_1

  monitor_2:
    container_name: monitor_2
    image: monitor:latest
    entrypoint: python3 /main.py
    restart: on-failure
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock
      - ./storage:/states
    environment:
      - INTERNAL_PORT=3003
      - TIMEOUT=10
      - ID=monitor_2

  players_broadcaster:
    container_name: players_broadcaster
    image: broadcaster:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - monitor_1
      - monitor_2
    environment:
      - ROW_QUEUE=player_queue
      - QUEUES_TO_SEND=player_cleaner_queue,filter_rating_queue,group_by_player_queue
      - MONITOR_IP=monitor
      - MONITOR_PORT=3003
      - FREQUENCY=3
      - ID=players_broadcaster
      - MONITOR_IPS=monitor_1,monitor_2

  group_by_match:
    container_name: group_by_match
    image: group_by:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - monitor_1
      - monitor_2
    environment:
      - QUEUE_NAME=group_by_player_queue
      - N_REDUCERS=2
      - GROUP_BY_QUEUE=group_by_match_queue
      - GROUP_BY_FIELD=match
      - MONITOR_IP=monitor
      - MONITOR_PORT=3003
      - FREQUENCY=3
      - ID=group_by_match
      - MONITOR_IPS=monitor_1,monitor_2

  reducer_group_by_match_1:
    container_name: reducer_group_by_match_1
    image: reducer_group_by:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - monitor_1
      - monitor_2
    volumes: 
      - ./storage:/states
    environment:
      - GROUP_BY_QUEUE=group_by_match_queue_1
      - GROUP_BY_FIELD=match
      - GROUPED_PLAYERS_QUEUE=grouped_players_queue_filter_swp
      - BATCH_TO_SEND=1000
      - MONITOR_IP=monitor
      - MONITOR_PORT=3003
      - FREQUENCY=3
      - ID=reducer_group_by_match_1
      - MONITOR_IPS=monitor_1,monitor_2

  reducer_group_by_match_2:
    container_name: reducer_group_by_match_2
    image: reducer_group_by:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - monitor_1
      - monitor_2
    volumes: 
      - ./storage:/states
    environment:
      - GROUP_BY_QUEUE=group_by_match_queue_2
      - GROUP_BY_FIELD=match
      - GROUPED_PLAYERS_QUEUE=grouped_players_queue_filter_swp
      - BATCH_TO_SEND=1000
      - MONITOR_IP=monitor
      - MONITOR_PORT=3003
      - FREQUENCY=3
      - ID=reducer_group_by_match_2
      - MONITOR_IPS=monitor_1,monitor_2

  filter_solo_winner_player_1:
    container_name: filter_solo_winner_player_1
    image: filter_solo_winner_player:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - monitor_1
      - monitor_2
    volumes: 
      - ./storage:/states
    environment:
      - GROUPED_PLAYERS_QUEUE=grouped_players_queue_filter_swp
      - OUTPUT_QUEUE=output_queue_2
      - RATING_FIELD=rating
      - WINNER_FIELD=winner
      - INTERFACE_IP=interface
      - INTERFACE_PORT=3001
      - MONITOR_IP=monitor
      - MONITOR_PORT=3003
      - FREQUENCY=3
      - MONITOR_IPS=monitor_1,monitor_2
      - SENTINEL_AMOUNT=2
      - ID=filter_solo_winner_player_1

  interface:
    container_name: interface
    image: interface:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - monitor_1
      - monitor_2
    volumes: 
      - ./storage:/states
    environment:
      - API_PORT=3002
      - SENTINEL_AMOUNT=4
      - INTERNAL_PORT=3001
      - MONITOR_IPS=monitor_1,monitor_2
      - MONITOR_PORT=3003
      - FREQUENCY=3
      - ID=interface

volumes:
  storage:
