version: '3'
services:
  rabbitmq:
    build:
      context: ./rabbitmq
      dockerfile: Dockerfile
    ports:
      - 15672:15672
      - 5672:5672

  monitor:
    container_name: monitor
    image: monitor:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock
      - /storage:/states
    links: 
      - rabbitmq
    environment:
      - INTERNAL_PORT=3003
      - TIMEOUT=10

  filter_avg_rating_server_duration_1:
    container_name: filter_avg_rating_server_duration_1
    image: filter_avg_rating_server_duration:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
      - monitor
    links: 
      - rabbitmq
    environment:
      - MATCH_QUEUE=filter_arsd_queue
      - OUTPUT_QUEUE=output_queue_1
      - AVG_RATING_FIELD=average_rating
      - SERVER_FIELD=server
      - DURATION_FIELD=duration
      - ID_FIELD=token
      - INTERFACE_IP=interface
      - INTERFACE_PORT=3001
      - MONITOR_IP=monitor
      - MONITOR_PORT=3003
      - FREQUENCY=3
      - ID=filter_avg_rating_server_duration_1

  matches_broadcaster:
    container_name: matches_broadcaster
    image: broadcaster:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
      - monitor
    links: 
      - rabbitmq
    environment:
      - ROW_QUEUE=match_queue
      - QUEUES_TO_SEND=filter_arsd_queue,filter_lmm_queue
      - MONITOR_IP=monitor
      - MONITOR_PORT=3003
      - FREQUENCY=3
      - ID=matches_broadcaster

  group_by_match:
    container_name: group_by_match
    image: group_by:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
      - monitor
    links: 
      - rabbitmq
    environment:
      - QUEUE_NAME=group_by_player_queue
      - N_REDUCERS=2
      - GROUP_BY_QUEUE=group_by_match_queue
      - GROUP_BY_FIELD=match
      - MONITOR_IP=monitor
      - MONITOR_PORT=3003
      - FREQUENCY=3
      - ID=group_by_match

  reducer_group_by_match_1:
    container_name: reducer_group_by_match_1
    image: reducer_group_by:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
      - monitor
    links: 
      - rabbitmq
    environment:
      - GROUP_BY_QUEUE=group_by_match_queue_1
      - GROUP_BY_FIELD=match
      - GROUPED_PLAYERS_QUEUE=grouped_players_queue_filter_swp
      - BATCH_TO_SEND=1000
      - MONITOR_IP=monitor
      - MONITOR_PORT=3003
      - FREQUENCY=3
      - ID=reducer_group_by_match_1

  reducer_group_by_match_2:
    container_name: reducer_group_by_match_2
    image: reducer_group_by:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
      - monitor
    links: 
      - rabbitmq
    environment:
      - GROUP_BY_QUEUE=group_by_match_queue_2
      - GROUP_BY_FIELD=match
      - GROUPED_PLAYERS_QUEUE=grouped_players_queue_filter_swp
      - BATCH_TO_SEND=1000
      - MONITOR_IP=monitor
      - MONITOR_PORT=3003
      - FREQUENCY=3
      - ID=reducer_group_by_match_2

  filter_solo_winner_player_1:
    container_name: filter_solo_winner_player_1
    image: filter_solo_winner_player:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
      - monitor
    links: 
      - rabbitmq
    environment:
      - GROUPED_PLAYERS_QUEUE=grouped_players_queue_filter_swp
      - OUTPUT_QUEUE=output_queue_2
      - RATING_FIELD=rating
      - WINNER_FIELD=winner
      - INTERFACE_IP=interface
      - INTERFACE_PORT=3001
      - MONITOR_IP=monitor
      - MONITOR_PORT=3003
      - FREQUENCY=3
      - ID=filter_solo_winner_player_2

  filter_ladder_map_mirror:
    container_name: filter_ladder_map_mirror
    image: filter_ladder_map_mirror:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
      - monitor
    links: 
      - rabbitmq
    environment:
      - MATCH_QUEUE=filter_lmm_queue
      - MATCH_TOKEN_EXCHANGE=match_token_exchange
      - TOP_CIV_ROUTING_KEY=top_civ_routing_key
      - RATE_WINNER_ROUTING_KEY=rate_winner_routing_key
      - LADDER_FIELD=ladder
      - MAP_FIELD=map
      - MIRROR_FIELD=mirror
      - ID_FIELD=token
      - MONITOR_IP=monitor
      - MONITOR_PORT=3003
      - FREQUENCY=3
      - ID=filter_ladder_map_mirror

  players_broadcaster:
    container_name: players_broadcaster
    image: broadcaster:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
      - monitor
    links: 
      - rabbitmq
    environment:
      - ROW_QUEUE=player_queue
      - QUEUES_TO_SEND=player_cleaner_queue,filter_rating_queue,group_by_player_queue
      - MONITOR_IP=monitor
      - MONITOR_PORT=3003
      - FREQUENCY=3
      - ID=players_broadcaster

  players_cleaner:
    container_name: players_cleaner
    image: players_cleaner:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
      - monitor
    links: 
      - rabbitmq
    environment:
      - PLAYER_QUEUE=player_cleaner_queue
      - MATCH_FIELD=match
      - CIV_FIELD=civ
      - WINNER_FIELD=winner
      - JOIN_EXCHANGE=match_token_exchange
      - JOIN_ROUTING_KEY=player_rate_winner_routing_key
      - MONITOR_IP=monitor
      - MONITOR_PORT=3003
      - FREQUENCY=3
      - ID=players_cleaner

  filter_rating:
    container_name: filter_rating
    image: filter_rating:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
      - monitor
    links: 
      - rabbitmq
    environment:
      - PLAYER_QUEUE=filter_rating_queue
      - RATING_FIELD=rating
      - MATCH_FIELD=match
      - CIV_FIELD=civ
      - ID_FIELD=token
      - JOIN_EXCHANGE=match_token_exchange
      - JOIN_ROUTING_KEY=player_top_civ_routing_key
      - MONITOR_IP=monitor
      - MONITOR_PORT=3003
      - FREQUENCY=3
      - ID=filter_rating

  join_rate_winner:
    container_name: join_rate_winner
    image: join:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
      - monitor
    links: 
      - rabbitmq
    environment:
      - MATCH_TOKEN_EXCHANGE=match_token_exchange
      - N_REDUCERS=1
      - MATCH_CONSUMER_ROUTING_KEY=rate_winner_routing_key
      - JOIN_EXCHANGE=join_rate_winner
      - MATCH_ID_FIELD=token
      - PLAYER_CONSUMER_ROUTING_KEY=player_rate_winner_routing_key
      - PLAYER_MATCH_FIELD=match
      - MONITOR_IP=monitor
      - MONITOR_PORT=3003
      - FREQUENCY=3
      - ID=join_rate_winner

  join_top_civ:
    container_name: join_top_civ
    image: join:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
      - monitor
    links: 
      - rabbitmq
    environment:
      - MATCH_TOKEN_EXCHANGE=match_token_exchange
      - N_REDUCERS=1
      - MATCH_CONSUMER_ROUTING_KEY=top_civ_routing_key
      - JOIN_EXCHANGE=join_top_civ
      - MATCH_ID_FIELD=token
      - PLAYER_CONSUMER_ROUTING_KEY=player_top_civ_routing_key
      - PLAYER_MATCH_FIELD=match
      - MONITOR_IP=monitor
      - MONITOR_PORT=3003
      - FREQUENCY=3
      - ID=join_top_civ

  reducer_rate_winner_join_1:
    container_name: reducer_rate_winner_join_1
    image: reducer_join:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
      - monitor
    links: 
      - rabbitmq
    environment:
      - JOIN_EXCHANGE=join_rate_winner_1
      - MATCH_CONSUMER_ROUTING_KEY=rate_winner_routing_key
      - PLAYER_CONSUMER_ROUTING_KEY=player_rate_winner_routing_key
      - GROUPED_RESULT_QUEUE=grouped_rate_winner_queue
      - MATCH_ID_FIELD=token
      - PLAYER_MATCH_FIELD=match
      - BATCH_TO_SEND=1000
      - MONITOR_IP=monitor
      - MONITOR_PORT=3003
      - FREQUENCY=3
      - ID=reducer_rate_winner_join_1

  reducer_top_civ_join_1:
    container_name: reducer_top_civ_join_1
    image: reducer_join:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
      - monitor
    links: 
      - rabbitmq
    environment:
      - JOIN_EXCHANGE=join_top_civ_1
      - MATCH_CONSUMER_ROUTING_KEY=top_civ_routing_key
      - PLAYER_CONSUMER_ROUTING_KEY=player_top_civ_routing_key
      - GROUPED_RESULT_QUEUE=grouped_top_civ_queue
      - MATCH_ID_FIELD=token
      - PLAYER_MATCH_FIELD=match
      - BATCH_TO_SEND=1000
      - MONITOR_IP=monitor
      - MONITOR_PORT=3003
      - FREQUENCY=3
      - ID=reducer_top_civ_join_1

  group_by_civ_rate_winner:
    container_name: group_by_civ_rate_winner
    image: group_by:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
      - monitor
    links: 
      - rabbitmq
    environment:
      - QUEUE_NAME=grouped_rate_winner_queue
      - N_REDUCERS=2
      - GROUP_BY_QUEUE=group_by_civ_rate_winner_queue
      - GROUP_BY_FIELD=civ
      - MONITOR_IP=monitor
      - MONITOR_PORT=3003
      - FREQUENCY=3
      - ID=group_by_civ_rate_winner

  reducer_group_by_civ_rate_winner_1:
    container_name: reducer_group_by_civ_rate_winner_1
    image: reducer_group_by:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
      - monitor
    links: 
      - rabbitmq
    environment:
      - GROUP_BY_QUEUE=group_by_civ_rate_winner_queue_1
      - GROUP_BY_FIELD=civ
      - GROUPED_PLAYERS_QUEUE=winner_rate_calculator_queue
      - SENTINEL_AMOUNT=1
      - BATCH_TO_SEND=1000
      - MONITOR_IP=monitor
      - MONITOR_PORT=3003
      - FREQUENCY=3
      - ID=reducer_group_by_civ_rate_winner_1

  reducer_group_by_civ_rate_winner_2:
    container_name: reducer_group_by_civ_rate_winner_2
    image: reducer_group_by:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
      - monitor
    links: 
      - rabbitmq
    environment:
      - GROUP_BY_QUEUE=group_by_civ_rate_winner_queue_2
      - GROUP_BY_FIELD=civ
      - GROUPED_PLAYERS_QUEUE=winner_rate_calculator_queue
      - SENTINEL_AMOUNT=1
      - BATCH_TO_SEND=1000
      - MONITOR_IP=monitor
      - MONITOR_PORT=3003
      - FREQUENCY=3
      - ID=reducer_group_by_civ_rate_winner_2

  group_by_civ_top_civ:
    container_name: group_by_civ_top_civ
    image: group_by:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
      - monitor
    links: 
      - rabbitmq
    environment:
      - QUEUE_NAME=grouped_top_civ_queue
      - N_REDUCERS=2
      - GROUP_BY_QUEUE=group_by_civ_top_civ_queue
      - GROUP_BY_FIELD=civ
      - MONITOR_IP=monitor
      - MONITOR_PORT=3003
      - FREQUENCY=3
      - ID=group_by_civ_top_civ

  reducer_group_by_civ_top_civ_1:
    container_name: reducer_group_by_civ_top_civ_1
    image: reducer_group_by:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
      - monitor
    links: 
      - rabbitmq
    environment:
      - GROUP_BY_QUEUE=group_by_civ_top_civ_queue_1
      - GROUP_BY_FIELD=civ
      - GROUPED_PLAYERS_QUEUE=top_civ_calculator_queue
      - SENTINEL_AMOUNT=1
      - BATCH_TO_SEND=1000
      - MONITOR_IP=monitor
      - MONITOR_PORT=3003
      - FREQUENCY=3
      - ID=reducer_group_by_civ_top_civ_1

  reducer_group_by_civ_top_civ_2:
    container_name: reducer_group_by_civ_top_civ_2
    image: reducer_group_by:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
      - monitor
    links: 
      - rabbitmq
    environment:
      - GROUP_BY_QUEUE=group_by_civ_top_civ_queue_2
      - GROUP_BY_FIELD=civ
      - GROUPED_PLAYERS_QUEUE=top_civ_calculator_queue
      - SENTINEL_AMOUNT=1
      - BATCH_TO_SEND=1000
      - MONITOR_IP=monitor
      - MONITOR_PORT=3003
      - FREQUENCY=3
      - ID=reducer_group_by_civ_top_civ_2

  winner_rate_calculator_1:
    container_name: winner_rate_calculator_1
    image: winner_rate_calculator:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
      - monitor
    volumes: 
      - /storage:/states
    links: 
      - rabbitmq
    environment:
      - GROUPED_PLAYERS_QUEUE=winner_rate_calculator_queue
      - OUTPUT_QUEUE=output_queue_3
      - WINNER_FIELD=winner
      - SENTINEL_AMOUNT=2
      - INTERFACE_IP=interface
      - INTERFACE_PORT=3001
      - MONITOR_IP=monitor
      - MONITOR_PORT=3003
      - FREQUENCY=3
      - ID=winner_rate_calculator_1

  top_civ_calculator_1:
    container_name: top_civ_calculator_1
    image: top_civ_calculator:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
      - monitor
    links: 
      - rabbitmq
    environment:
      - GROUPED_PLAYERS_QUEUE=top_civ_calculator_queue
      - OUTPUT_QUEUE=output_queue_4
      - ID_FIELD=token
      - SENTINEL_AMOUNT=2
      - INTERFACE_IP=interface
      - INTERFACE_PORT=3001
      - MONITOR_IP=monitor
      - MONITOR_PORT=3003
      - FREQUENCY=3
      - ID=top_civ_calculator_1

  interface:
    container_name: interface
    image: interface:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
      - monitor
    links: 
      - rabbitmq
    environment:
      - API_PORT=3002
      - SENTINEL_AMOUNT=4
      - INTERNAL_PORT=3001
      - MONITOR_IP=monitor
      - MONITOR_PORT=3003
      - FREQUENCY=3
      - ID=interface
    ports:
      - "3002:3002"

volumes:
  storage:
